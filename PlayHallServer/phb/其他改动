//新增胜利协议包
//获胜
struct STRU_Win_FIL_RQ
{
    STRU_Win_FIL_RQ():type(DEF_FIL_WIN),userid(0),zoneid(0),roomid(0),winid(0),score(0){

    }
    PackType type;
    int winid;
    int userid;
    int zoneid;
    int roomid;
    int score;
};//只有知道 什么专区 什么房间 才能找到响应的人


//服务器新增的胜利包处理
//服务器转发五子棋游戏结束命令给房间内成员
void CLogic::FIL_WinMsgSendRq(sock_fd clientfd, char *szbuf, int nlen)
{
    printf("clientfd:%d  FIL_WinMsgSendRq\n",clientfd);
    //拆包
    STRU_Win_FIL_RQ* rq = (STRU_Win_FIL_RQ*)szbuf;
    //什么专区 什么房间 谁 发了什么
    //根据专区 拿到房间列表  根据房间 拿到房间内成员  转发给房间里的所有人
    //rq->zoneid //根据专区 拿到房间列表
    int player_id[2];
    int score = rq->score;
    list<int>& lstRes = m_roomUserList[rq->roomid];
    for(auto ite = lstRes.begin();ite != lstRes.end();++ite)
    {
        int userid = *ite;
        UserInfo * info = nullptr;
        if(!m_mapIdToUserInfo.find(userid,info))continue;
        SendData(info->m_sockfd,szbuf,nlen);
        if(info->m_id==rq->winid){
            player_id[0] = info->m_id;
        }else
        {
            player_id[1] = info->m_id;
        }
    }
    char sqlstr1[1000] = "";
    sprintf( sqlstr1 , "update t_user set total_matches=total_matches+1,win_matches=win_matches+1,score = score+%d where id = %d",score,player_id[0]);
    m_sql->UpdataMysql(sqlstr1);
    char sqlstr2[1000] = "";
    sprintf( sqlstr2 , "update t_user set total_matches=total_matches+1,score = GREATEST(score - %d, 0) where id = %d",score,player_id[1]);
    m_sql->UpdataMysql(sqlstr2);
    m_LeaderBoard.UpdataBoard(player_id[0],score,player_id[1],score);
}

//在clogic的初始化的时候把数据库中的用户内容读到内存中并创建排行榜
//在这个类中创建一个排行榜对象(leaderboard m_LeaderBoard;)
//这段加到clogic类中的初始化里
	//排行榜
        char sqlstr[1000] = "";
        list<string> lstRes;
        sprintf( sqlstr , "select id , name , total_matches , score , win_matches from t_user");
        m_sql->SelectMysql( sqlstr , 5 , lstRes );
        while(lstRes.size() > 0)
        {
            //创建缓存节点
            CPlayerInfo* p_info = new CPlayerInfo;
            p_info->id = atoi(lstRes.front().c_str());
            lstRes.pop_front();
            string name = lstRes.front();
            strcpy(p_info->name,name.c_str());
            lstRes.pop_front();
            p_info->all = atoi(lstRes.front().c_str());
            lstRes.pop_front();
            p_info->score = atoi(lstRes.front().c_str());
            lstRes.pop_front();
            p_info->win = atoi(lstRes.front().c_str());
            lstRes.pop_front();
            //创建跳表结点并指向
            p_info->add_skip = m_LeaderBoard.UpdataBoard(p_info->id,p_info->score,p_info->name);

            //将结点加入到哈希表
            m_LeaderBoard.UpdataHash(p_info);



//最后别忘了该协议映射表
//客户端发包部分直接赋值send就可以了 
